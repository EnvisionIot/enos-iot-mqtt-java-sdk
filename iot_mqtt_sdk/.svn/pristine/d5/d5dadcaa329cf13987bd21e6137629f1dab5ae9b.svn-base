package com.envisioniot.enos.iot_mqtt_sdk.message.upstream.tsl;

import java.util.List;
import java.util.Map;
import java.util.regex.Pattern;

import com.envisioniot.enos.iot_mqtt_sdk.core.internals.constants.ArrivedTopicPattern;
import com.envisioniot.enos.iot_mqtt_sdk.core.msg.IMqttArrivedMessage;
import com.envisioniot.enos.iot_mqtt_sdk.message.upstream.BaseMqttResponse;

/**
 * 
 * 错误码 消息 描述 460 request parameter error 请求参数错误 6321 tsl: device not exist in
 * product 设备不存在
 * AckMessageBody{
 * id='1',
 * code=200,
 * data={
 * tslModelId=kqwpDhGU,
 * tslModelName=model name,
 * tslModelDesc=model desc,
 * tslModelCatagory=catagory1,
 * tslAttributeMap={
 * intid={minimum=40.0, maximum=500.0, exclusiveMinimum=false, exclusiveMaximum=true, unit={multiplier=ONE}, hasQuality=false, desc=int desc, required=true, accessMode=true, tags={tagMap={}}, identifier=intid}, structid={struct={structitem3={minimum=1.4E-45, maximum=3.4028235E38, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=output desc, required=false, accessMode=false, tags={tagMap={}}}, structitem2={minimum=-2.147483648E9, maximum=2.147483647E9, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=input desc, required=false, accessMode=false, tags={tagMap={}}}, structitem1={format=EMAIL, required=false, accessMode=false, tags={tagMap={}}}}, name=struct name, desc=struct desc, required=true, accessMode=true, tags={tagMap={}}, identifier=structid}, textid={minLength=2.0, maxLength=50.0, pattern=dkfdkdf, format=HOSTNAME, name=text name, desc=text desc, required=true, accessMode=true, tags={tagMap={}}, identifier=textid}, enumid={specsMap={5=1st desc, 6=2st desc}, desc=enum desc, required=false, accessMode=true, tags={tagMap={}}, identifier=enumid}, floatid={minimum=1.4E-45, maximum=3.4028235E38, exclusiveMinimum=false, exclusiveMaximum=true, unit={multiplier=ONE}, hasQuality=false, desc=float desc, required=true, accessMode=true, tags={tagMap={}}, identifier=floatid}, dateid={name=date name, desc=date desc, required=false, accessMode=true, tags={tagMap={}}, identifier=dateid}, doubleid={minimum=4.9E-324, maximum=1.7976931348623157E308, exclusiveMinimum=true, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=double desc, required=true, accessMode=false, tags={tagMap={}}, identifier=doubleid}, arrayid={innerType={format=EMAIL, required=false, accessMode=false, tags={tagMap={}}}, minItems=2.0, maxItems=5.0, name=arrayname, desc=arraydesc, required=true, accessMode=true, tags={tagMap={}}, identifier=arrayid}, boolid={name=bool name, desc=bool desc, required=false, accessMode=true, tags={tagMap={}}, identifier=boolid}}, tslMeasurepointMap={intid={minimum=40.0, maximum=500.0, exclusiveMinimum=false, exclusiveMaximum=true, unit={multiplier=ONE}, hasQuality=false, desc=int desc, required=false, accessMode=true, tags={tagMap={}}, identifier=intid}, structid={struct={structitem3={minimum=1.4E-45, maximum=3.4028235E38, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=output desc, required=false, accessMode=false, tags={tagMap={}}}, structitem2={minimum=-2.147483648E9, maximum=2.147483647E9, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=input desc, required=false, accessMode=false, tags={tagMap={}}}, structitem1={format=EMAIL, required=false, accessMode=false, tags={tagMap={}}}}, name=struct name, desc=struct desc, required=false, accessMode=true, tags={tagMap={}}, identifier=structid}, textid={minLength=2.0, maxLength=50.0, pattern=dkfdkdf, format=HOSTNAME, name=text name, desc=text desc, required=false, accessMode=true, tags={tagMap={}}, identifier=textid}, enumid={specsMap={5=1st desc, 6=2st desc}, desc=enum desc, required=false, accessMode=true, tags={tagMap={}}, identifier=enumid}, floatid={minimum=1.4E-45, maximum=3.4028235E38, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=float desc, required=false, accessMode=true, tags={tagMap={}}, identifier=floatid}, dateid={name=date name, desc=date desc, required=false, accessMode=true, tags={tagMap={}}, identifier=dateid}, doubleid={minimum=4.9E-324, maximum=1.7976931348623157E308, exclusiveMinimum=true, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, desc=double desc, required=false, accessMode=false, tags={tagMap={}}, identifier=doubleid}, arrayid={innerType={format=EMAIL, required=false, accessMode=false, tags={tagMap={}}}, minItems=2.0, maxItems=5.0, name=arrayname, desc=arraydesc, required=false, accessMode=true, tags={tagMap={}}, identifier=arrayid}, boolid={name=bool name, desc=bool desc, required=false, accessMode=true, tags={tagMap={}}, identifier=boolid}},
 *
 * tslServiceMap={
 * service2={outputData=[{minimum=1.0, maximum=3.0, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, name=inputdataname, desc=output desc, required=false, accessMode=false, tags={tagMap={}}, identifier=inputid}], inputData=[{minimum=1.0, maximum=3.0, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, name=inputdataname, desc=input desc, required=false, accessMode=false, tags={tagMap={}}, identifier=inputid}], method=method2, name=name2, required=true, callType=ASYNC, desc=i am a async service, identifier=service2},
 * service1={outputData=[{minimum=1.0, maximum=3.0, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, name=inputdataname, desc=output desc, required=false, accessMode=false, tags={tagMap={}}, identifier=inputid}], inputData=[{minimum=1.0, maximum=3.0, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, name=inputdataname, desc=input desc, required=false, accessMode=false, tags={tagMap={}}, identifier=inputid}], method=method1, name=name1, required=true, callType=SYNC, desc=i am a sync service, identifier=service1}}, tslEventMap={event1={outputData=[{minimum=1.0, maximum=3.0, exclusiveMinimum=false, exclusiveMaximum=false, unit={multiplier=ONE}, hasQuality=false, name=outputdataname, desc=output desc, required=false, accessMode=false, tags={tagMap={}}, identifier=inputid}], method=method1, name=name1, required=true, desc=i am a event, identifier=event1}}, tag={tagMap={tagkey1=tagv1, tagkey2=tagv2}},
 * allowAdditionalAttribute=false,
 * inheritedAttributeIds=[],
 * inheritedMeasurepointIds=[],
 * inheritedServiceIds=[],
 * inheritedEventIds=[],
 * copyFromId=from id,
 * extraInfo={createBy=test_uid, createTime=1.533749055555E12, updateBy=test_uid, updateTime=1.533750772098E12, ns=test_orgCode}},
 * message='null'}
 * @author zhensheng.cai
 * @date 2018/7/12.
 */
public class TslTemplateGetResponse extends BaseMqttResponse
{

	private static Pattern pattern = Pattern.compile(ArrivedTopicPattern.TSL_TEMPLATE_GET_REPLY);

	public List<Object> getMeasurepoints()
	{
		Map<String,List<Object>> data =  this.getData();
		return data.get("measurepoints");
	}

	public List<Object> getEvents()
	{
		Map<String,List<Object>> data =  this.getData();
		return data.get("events");
	}

	public List<Object> getServices()
	{
		Map<String,List<Object>> data =  this.getData();
		return data.get("services");
	}

    @Override
    public Pattern getMatchTopicPattern()
    {
		return pattern;
	}


}

/**
 * { "id": "123", "code": 200, "data": { "schema":
 * "https://iot-tsl.oss-cn-shanghai.aliyuncs.com/schema.json", "link":
 * "/sys/1234556554/airCondition/thing/", "profile": { "productKey":
 * "1234556554", "deviceName": "airCondition" }, "properties": [ { "identifier":
 * "fan_array_property", "name": "风扇数组属性", "accessMode": "r", "required": true,
 * "dataType": { "type": "array", "specs": { "size": "128", "item": { "type":
 * "int" } } } } ], "events": [ { "identifier": "alarm", "name": "alarm",
 * "desc": "风扇警报", "type": "alert", "required": true, "outputData": [ {
 * "identifier": "errorCode", "name": "错误码", "dataType": { "type": "text",
 * "specs": { "length": "255" } } } ], "method": "thing.event.alarm.post" } ],
 * "services": [ { "identifier": "timeReset", "name": "timeReset", "desc":
 * "校准时间", "inputData": [ { "identifier": "timeZone", "name": "时区", "dataType":
 * { "type": "text", "specs": { "length": "512" } } } ], "outputData": [ {
 * "identifier": "curTime", "name": "当前的时间", "dataType": { "type": "date",
 * "specs": {} } } ], "method": "thing.service.timeReset" }, { "identifier":
 * "set", "name": "set", "required": true, "desc": "属性设置", "method":
 * "thing.service.property.set", "inputData": [ { "identifier":
 * "fan_int_property", "name": "风扇整数型属性", "accessMode": "rw", "required": true,
 * "dataType": { "type": "int", "specs": { "min": "0", "max": "100", "unit":
 * "g/ml", "unitName": "毫升" } } } ], "outputData": [] }, { "identifier": "get",
 * "name": "get", "required": true, "desc": "属性获取", "method":
 * "thing.service.property.get", "inputData": [ "array_property",
 * "fan_int_property", "batch_enum_attr_id", "fan_float_property",
 * "fan_double_property", "fan_text_property", "fan_date_property",
 * "batch_boolean_attr_id", "fan_struct_property" ], "outputData": [ {
 * "identifier": "fan_array_property", "name": "风扇数组属性", "accessMode": "r",
 * "required": true, "dataType": { "type": "array", "specs": { "size": "128",
 * "item": { "type": "int" } } } } ] } ] } }
 */